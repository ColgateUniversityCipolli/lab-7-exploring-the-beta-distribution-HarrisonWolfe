summary.statistics.of.beta52 = tibble(beta.sample) |>
summarize(sample.mean = mean(beta.sample),
sample.variance = var(beta.sample),
sample.sd = sd(beta.sample),
sample.skewness = skewness(beta.sample),
sample.excess.kurtosis = kurtosis(beta.sample))
plot3 = ggplot(beta.df)+
geom_histogram(aes(x = sample, y = after_stat(density)), bins = 30, fill = "purple")+
geom_density(aes(x=sample, color = "Density of Sample"))+
geom_hline(yintercept = 0)+
xlab("Sample")+
ylab("Density")+
theme_minimal()+
geom_line(data = beta.pdf, aes(x = x, y = beta, color = "Beta (5,2)"))+
guides(color = guide_legend(title = NULL))+
theme(legend.position = "bottom")
#BETA A = 0.5 B = 0.5
set.seed(7272) # Set seed so we all get the same results.
sample.size <- 500 # Specify sample details
alpha <- 0.5
beta <- 0.5
x = seq(-.1, 1.1, length.out=1000)
beta.sample <- rbeta(n = sample.size,  # sample size
shape1 = alpha,   # alpha parameter
shape2 = beta)    # beta parameter
beta.df = tibble(sample = beta.sample)
beta.pdf = tibble(x = x, beta = dbeta(x, alpha, beta))
summary.statistics.of.beta.0.5.0.5 = tibble(beta.sample) |>
summarize(sample.mean = mean(beta.sample),
sample.variance = var(beta.sample),
sample.sd = sd(beta.sample),
sample.skewness = skewness(beta.sample),
sample.excess.kurtosis = kurtosis(beta.sample))
plot4 = ggplot(beta.df)+
geom_histogram(aes(x = sample, y = after_stat(density)), bins = 38, fill = "purple")+
geom_density(aes(x=sample, color = "Density of Sample"))+
geom_hline(yintercept = 0)+
xlab("Sample")+
ylab("Density")+
theme_minimal()+
geom_line(data = beta.pdf, aes(x = x, y = beta, color = "Beta (0.5,0.5)"))+
guides(color = guide_legend(title = NULL))+
theme(legend.position = "bottom")
(plot1 + plot2) / (plot3 + plot4)
total.summary = summary.statistics.of.beta.0.5.0.5 |>
rbind(summary.statistics.of.beta25) |>
rbind(summary.statistics.of.beta55) |>
rbind(summary.statistics.of.beta52)
#STEP 4############
set.seed(7272)
beta.sample = rbeta(n=500, shape1 = 2, shape2 = 5)
# Calculate cumulative statistics
cum.statistics = tibble(
cum_mean = cummean(beta.sample),
cum_skew = cumskew(beta.sample),
cum_kurt = cumkurt(beta.sample) - 3,  # Subtract 3 for excess kurtosis
cum_var = cumvar(beta.sample)
) |>
mutate(n = row_number())
mean.plot = ggplot(cum.statistics, aes(x=n,y=cum_mean))+
geom_line(color = "blue")+
geom_hline(yintercept = beta25$mean, linetype = "dashed", color = "red")+
labs(x = "Sample Size", y = "Mean")+
theme_minimal()
skew.plot = ggplot(cum.statistics, aes(x=n,y=cum_skew))+
geom_line(color = "blue")+
geom_hline(yintercept = beta25$skewness, linetype = "dashed", color = "red")+
labs(x = "Sample Size", y = "Skewness")+
theme_minimal()
kurt.plot = ggplot(cum.statistics, aes(x=n,y=cum_kurt))+
geom_line(color = "blue")+
geom_hline(yintercept = beta25$excess_kurtosis, linetype = "dashed", color = "red")+
labs(x = "Sample Size", y = "Kurtosis")+
theme_minimal()
var.plot = ggplot(cum.statistics, aes(x=n,y=cum_var))+
geom_line(color = "blue")+
geom_hline(yintercept = beta25$variance, linetype = "dashed", color = "red")+
labs(x = "Sample Size", y = "Variance")+
theme_minimal()
(mean.plot + skew.plot) / (kurt.plot + var.plot)
final_df <- tibble()
for (i in 2:50) {
set.seed(7272 + i)
beta_sample <- rbeta(n = 500, shape1 = 2, shape2 = 5)
# Compute cumulative statistics
simulation_cum_statistics <- tibble(
n = seq_along(beta_sample),
cum_mean = cummean(beta_sample),
cum_var = cumvar(beta_sample),
cum_skew = cumskew(beta_sample),
cum_kurt = cumkurt(beta_sample)-3,
simulation = i
)
final_df = final_df |>
bind_rows(simulation_cum_statistics) |>
unique()
}
#PLOTTING
total.mean.plot = ggplot(final_df, aes(x=n,y=cum_mean, group=simulation))+
geom_line(color = final_df$simulation)+
geom_hline(yintercept = beta25$mean, linetype = "dashed", color = "red")+
labs(x = "Sample Size", y = "Mean")+
guides(color = "none")+
theme_minimal()
total.skew.plot = ggplot(final_df, aes(x=n,y=cum_skew,group=simulation))+
geom_line(color = final_df$simulation)+
geom_hline(yintercept = beta25$skewness, linetype = "dashed", color = "red")+
labs(x = "Sample Size", y = "Skewness")+
guides(color = "none")+
theme_minimal()
total.kurt.plot = ggplot(final_df, aes(x=n,y=cum_kurt,group=simulation))+
geom_line(color = final_df$simulation)+
geom_hline(yintercept = beta25$excess_kurtosis, linetype = "dashed", color = "red")+
labs(x = "Sample Size", y = "Kurtosis")+
guides(color = "none")+
theme_minimal()
total.var.plot = ggplot(final_df, aes(x=n,y=cum_var, group=simulation))+
geom_line(color = final_df$simulation)+
geom_hline(yintercept = beta25$variance, linetype = "dashed", color = "red")+
labs(x = "Sample Size", y = "Variance")+
guides(color = "none")+
theme_minimal()
(total.mean.plot + total.skew.plot) / (total.kurt.plot + total.var.plot)
#STEP 5
simulated.data = tibble()
statistics.dist = tibble()
for(i in 1:1000){
set.seed(7272 + i)
beta_sample <- rbeta(n = 500, shape1 = 2, shape2 = 5)
# Compute cumulative statistics
simulated.data <- tibble(
mean = mean(beta_sample),
var = var(beta_sample),
skew = skewness(beta_sample),
kurt = kurtosis(beta_sample)-3,
simulation = i
)
statistics.dist = statistics.dist |>
bind_rows(simulated.data) |>
unique()
}
#PLOTTING THIS DATA
mean.dist = ggplot(statistics.dist, aes(x=mean,y=after_stat(density)))+
geom_histogram(fill = "blue")+
theme_minimal()+
labs(x= "Mean", y = "Occurances")+
geom_density(aes(x=mean))+
geom_hline(yintercept = 0)
var.dist = ggplot(statistics.dist, aes(x=var,y=after_stat(density)))+
geom_histogram(fill = "blue")+
theme_minimal()+
labs(x= "Variance", y = "Occurances")+
geom_density(aes(x=var))+
geom_hline(yintercept = 0)
kurt.dist = ggplot(statistics.dist)+
geom_histogram(aes(x=kurt, y = after_stat(density)),fill = "blue",bins=28)+
theme_minimal()+
labs(x= "Excess Kurtosis", y = "Occurances")+
geom_density(aes(x=kurt))+
geom_hline(yintercept = 0)
skew.dist = ggplot(statistics.dist, aes(x=skew,y=after_stat(density)))+
geom_histogram(fill = "blue",bins=26)+
theme_minimal()+
labs(x= "Skewness", y = "Occurances")+
geom_density(aes(x=skew))+
geom_hline(yintercept = 0)
(mean.dist + skew.dist) / (kurt.dist + var.dist)
#TASK 6 LAB 8!!!!!
death.data = read_csv("realreal.csv") |>
mutate("Deaths" = get("2022")) |>
select("Country Name", "Deaths") |>
mutate(prop.death = get("Deaths")/1000) |>
filter(!is.na(prop.death))
mombeta = function(par,data){
alpha = par[1]
beta  = par[2]
EX =  mean(data, na.rm = T)
EX2 = mean(data^2, na.rm = T)
m1 = (alpha)/(alpha + beta)
m2 = ((alpha+1)*(alpha)) / ((alpha + beta + 1)*(alpha + beta))
return(c(EX - m1, EX2 - m2))
}
moms = nleqslv(x = c(0.5,0.5),
fn = mombeta,
data = death.data$prop.death)
alpha.hat.mom <- moms$x[1]
beta.hat.mom <- moms$x[2]
llbeta <- function(data, par, neg=F){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dbeta(x=data, shape1=alpha, shape2=beta)),na.rm = T)
return(ifelse(neg, -loglik, loglik))
}
(mles <- optim(par = c(0.5,0.5),
fn = llbeta,
data = death.data$prop.death,
neg=T))
alpha.hat.mle <- mles$par[1]
beta.hat.mle <- mles$par[2]
mleplot <- tibble(x = seq(-0, 0.02, length.out = 1000)) |>
mutate(y = dbeta(x, alpha.hat.mle, beta.hat.mle))
momplot <- tibble(x = seq(-0, 0.02, length.out = 1000)) |>
mutate(y = dbeta(x, alpha.hat.mom, beta.hat.mom))
ggplot()+
geom_histogram(data = death.data, aes(x=prop.death, y = after_stat(density),color = "lightgrey"), bins = 16,fill = "darkblue")+
geom_line(data = momplot, aes(x=x,y=y,color = "MOM Estimate"),linewidth = 2)+
geom_line(data = mleplot, aes(x=x,y=y,color = "MLE Estimate"),linetype = "dashed")+
scale_color_manual(values = c("MLE Estimate" = "green",
"MOM Estimate" = "red"))+
theme_minimal()+
xlab("Proportion of Deaths")+
ylab("Density")+
guides(color = guide_legend(title = "Estimation Method"))+
geom_hline(yintercept = 0)
#TASK 8
simulation = tibble()
for(i in 1:1000){
set.seed(7272 + i)
current.sample = rbeta(266, 8, 950)
mles.looped <- optim(par = c(0.5,0.5),
fn = llbeta,
data = current.sample,
neg=T)
alpha.hat.mle.store <- mles.looped$par[1]
beta.hat.mle.store <- mles.looped$par[2]
moms.looped = nleqslv(x = c(0.5,0.5),
fn = mombeta,
data = current.sample)
alpha.hat.mom.store <- moms.looped$x[1]
beta.hat.mom.store <- moms.looped$x[2]
in.simulation = tibble(mle.alpha = alpha.hat.mle.store,
mle.beta = beta.hat.mle.store,
mom.alpha = alpha.hat.mom.store,
mom.beta = beta.hat.mom.store,
simulation = i)
simulation = simulation |>
bind_rows(in.simulation) |>
unique()
}
mle.alpha.plot = ggplot(simulation)+
geom_density(aes(x=mle.alpha))+
theme_minimal()+
xlab("MLE Alphas")+
ylab("Density")+
geom_hline(yintercept = 0)
mle.beta.plot = ggplot(simulation)+
geom_density(aes(x=mle.beta))+
theme_minimal()+
xlab("MLE Betas")+
ylab("Density")+
geom_hline(yintercept = 0)
mom.alpha.plot = ggplot(simulation)+
geom_density(aes(x=mom.alpha))+
theme_minimal()+
xlab("MOM Alphas")+
ylab("Density")+
geom_hline(yintercept = 0)
mom.beta.plot = ggplot(simulation)+
geom_density(aes(x=mom.beta))+
theme_minimal()+
xlab("MOM Betas")+
ylab("Density")+
geom_hline(yintercept = 0)
(mle.alpha.plot + mle.beta.plot) / (mom.alpha.plot + mom.beta.plot)
a.theta = 8
b.theta = 950
names = c("alpha.mle", "alpha.mom", "beta.mle", "beta.mom")
bias = c(mean(simulation$mle.alpha) - a.theta,
mean(simulation$mom.alpha) - a.theta,
mean(simulation$mle.beta) - b.theta,
mean(simulation$mom.beta) - b.theta)
presicion = c(1/var(simulation$mle.alpha),
1/var(simulation$mom.alpha),
1/var(simulation$mle.beta),
1/var(simulation$mom.beta))
MSE = c(var(simulation$mle.alpha) + (mean(simulation$mle.alpha) - a.theta)^2,
var(simulation$mom.alpha) + (mean(simulation$mom.alpha) - a.theta)^2,
var(simulation$mle.beta) + (mean(simulation$mle.beta) - b.theta)^2,
var(simulation$mom.beta) + (mean(simulation$mom.beta) - b.theta)^2)
(predictors = tibble(names,bias,presicion,MSE))
#TABLES ADDDDDDDD IMPORTANTTTTT
xtable(beta.total, digits = 4)
\begin{table}[ht]
gc()
gc
gc()
data = read_csv("agacis.csv")
library(tidyverse)
data = read_csv("agacis.csv")
setwd("~/Documents/GitHub/week-9-coding-assignment-HarrisonWolfe")
library(tidyverse)
data = read_csv("agacis.csv")
View(data)
data = read_csv("agacis.csv")
data.precip <- data |>
dplyr::select(-Annual) |>                   # Remove annual column
pivot_longer(cols = c(Jan, Feb, Mar, Apr,   # pivot the column data into one col
May, Jun, Jul, Aug,
Sep, Oct, Nov, Dec),
values_to = "Precipitation",   # store the values in Precipitation
names_to = "Month") |>         # store the months in Month
mutate(Precipitation = case_when(Precipitation == "M" ~ NA_character_,
TRUE                 ~ Precipitation))|>
mutate(Precipitation = as.numeric(Precipitation))
View(data.precip)
#DATA CLEANING
data = read_csv("agacis.csv")
data.precip <- data |>
dplyr::select(-Annual) |>                   # Remove annual column
pivot_longer(cols = c(Jan, Feb, Mar, Apr,   # pivot the column data into one col
May, Jun, Jul, Aug,
Sep, Oct, Nov, Dec),
values_to = "Precipitation",   # store the values in Precipitation
names_to = "Month") |>         # store the months in Month
mutate(Precipitation = case_when(Precipitation == "M" ~ NA_character_,
TRUE                 ~ Precipitation))|>
mutate(Precipitation = as.numeric(Precipitation))
#MLES
llgamma <- function(data, par, neg=F){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dgamma(x=data, shape=alpha, rate=beta)))
return(ifelse(neg, -loglik, loglik))
}
#MLES
llgamma <- function(data, par, neg=F){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dgamma(x=data, shape=alpha, rate=beta)))
return(ifelse(neg, -loglik, loglik))
}
(mles <- optim(par = c(1,1),
fn = llgamma,
data=data.precip$Precipitation,
neg=T))
library(nleqslv)
#DATA CLEANING
data = read_csv("agacis.csv")
data.precip <- data |>
dplyr::select(-Annual) |>                   # Remove annual column
pivot_longer(cols = c(Jan, Feb, Mar, Apr,   # pivot the column data into one col
May, Jun, Jul, Aug,
Sep, Oct, Nov, Dec),
values_to = "Precipitation",   # store the values in Precipitation
names_to = "Month") |>         # store the months in Month
mutate(Precipitation = case_when(Precipitation == "M" ~ NA_character_,
TRUE                 ~ Precipitation))|>
mutate(Precipitation = as.numeric(Precipitation))
#MLES
llgamma <- function(data, par, neg=F){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dgamma(x=data, shape=alpha, rate=beta)))
return(ifelse(neg, -loglik, loglik))
}
(mles <- optim(par = c(1,1),
fn = llgamma,
data=data.precip$Precipitation,
neg=T))
mles <- optim(par = c(1,1),
fn = llgamma,
data=data.precip$Precipitation,
neg=T)
optim(par = c(1,1),
fn = llgamma,
data=data.precip$Precipitation,
neg=T)
data.precip <- data |>
dplyr::select(-Annual) |>                   # Remove annual column
pivot_longer(cols = c(Jan, Feb, Mar, Apr,   # pivot the column data into one col
May, Jun, Jul, Aug,
Sep, Oct, Nov, Dec),
values_to = "Precipitation",   # store the values in Precipitation
names_to = "Month") |>         # store the months in Month
mutate(Precipitation = case_when(Precipitation == "M" ~ NA_character_,
TRUE                 ~ Precipitation))|>
mutate(Precipitation = as.numeric(Precipitation)) |>
-filter(is.na(Precipitation))
data.precip <- data |>
dplyr::select(-Annual) |>                   # Remove annual column
pivot_longer(cols = c(Jan, Feb, Mar, Apr,   # pivot the column data into one col
May, Jun, Jul, Aug,
Sep, Oct, Nov, Dec),
values_to = "Precipitation",   # store the values in Precipitation
names_to = "Month") |>         # store the months in Month
mutate(Precipitation = case_when(Precipitation == "M" ~ NA_character_,
TRUE                 ~ Precipitation))|>
mutate(Precipitation = as.numeric(Precipitation)) |>
filter(is.na(Precipitation))
View(data.precip)
data.precip <- data |>
dplyr::select(-Annual) |>                   # Remove annual column
pivot_longer(cols = c(Jan, Feb, Mar, Apr,   # pivot the column data into one col
May, Jun, Jul, Aug,
Sep, Oct, Nov, Dec),
values_to = "Precipitation",   # store the values in Precipitation
names_to = "Month") |>         # store the months in Month
mutate(Precipitation = case_when(Precipitation == "M" ~ NA_character_,
TRUE                 ~ Precipitation))|>
mutate(Precipitation = as.numeric(Precipitation)) |>
filter(-is.na(Precipitation))
data.precip <- data |>
dplyr::select(-Annual) |>                   # Remove annual column
pivot_longer(cols = c(Jan, Feb, Mar, Apr,   # pivot the column data into one col
May, Jun, Jul, Aug,
Sep, Oct, Nov, Dec),
values_to = "Precipitation",   # store the values in Precipitation
names_to = "Month") |>         # store the months in Month
mutate(Precipitation = case_when(Precipitation == "M" ~ NA_character_,
TRUE                 ~ Precipitation))|>
mutate(Precipitation = as.numeric(Precipitation)) |>
filter(!is.na(Precipitation))
View(data.precip)
#MLES
llgamma <- function(data, par, neg=F){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dgamma(x=data, shape=alpha, rate=beta)))
return(ifelse(neg, -loglik, loglik))
}
mles <- optim(par = c(1,1),
fn = llgamma,
data=data.precip$Precipitation,
neg=T)
alpha.hat.mle <- mles$par[1]
beta.hat.mle <- mles$par[2]
?plnorm
#MLES for Lognormal
lllognormal <- function(data, par, neg=F){
meanlog <- par[1]
sdlog <- par[2]
loglik <- sum(log(dlnorm(x=data, meanlog=meanlog, sdlog=sdlog)))
return(ifelse(neg, -loglik, loglik))
}
mles <- optim(par = c(1,1),
fn = lllognormal,
data=data.precip$Precipitation,
neg=T)
meanlog <- mles$par[1]
sdlog <- mles$par[2]
sum(log(dgamma(x=data, shape = alpha.hat.mle, rate = beta.hat.mle)))
sum(log(dgamma(x=data.precip$Precipitation, shape = alpha.hat.mle, rate = beta.hat.mle)))
sum(log(dlnorm(x=data, meanlog=meanlog, sdlog=sdlog)))
sum(log(dlnorm(x=data.precip$Precipitation, meanlog=meanlog, sdlog=sdlog)))
−2166.496 - sum(log(dgamma(x=data.precip$Precipitation, shape = alpha.hat.mle, rate = beta.hat.mle)))
−2166.496 - sum(log(dgamma(x=data.precip$Precipitation, shape = alpha.hat.mle, rate = beta.hat.mle)))
-2166.496 - sum(log(dgamma(x=data.precip$Precipitation, shape = alpha.hat.mle, rate = beta.hat.mle)))
dweibull()
-2166.496 - sum(log(dlnorm(x=data.precip$Precipitation, meanlog=meanlog, sdlog=sdlog)))
sum(log(dgamma(x=data.precip$Precipitation, shape = alpha.hat.mle, rate = beta.hat.mle))) - sum(log(dlnorm(x=data.precip$Precipitation, meanlog=meanlog, sdlog=sdlog)))
-2166.496 - sum(log(dlnorm(x=data.precip$Precipitation, meanlog=meanlog, sdlog=sdlog)))
-2166.496 - sum(log(dgamma(x=data.precip$Precipitation, shape = alpha.hat.mle, rate = beta.hat.mle)))
?dlnorm
mean(data=data.precip)
mean(data.precip$Precipitation)
log(mean(data.precip$Precipitation))
library(tidyverse)
library(nleqslv)
#DATA CLEANING
data = read_csv("agacis.csv")
data.precip <- data |>
dplyr::select(-Annual) |>                   # Remove annual column
pivot_longer(cols = c(Jan, Feb, Mar, Apr,   # pivot the column data into one col
May, Jun, Jul, Aug,
Sep, Oct, Nov, Dec),
values_to = "Precipitation",   # store the values in Precipitation
names_to = "Month") |>         # store the months in Month
mutate(Precipitation = case_when(Precipitation == "M" ~ NA_character_,
TRUE                 ~ Precipitation))|>
mutate(Precipitation = as.numeric(Precipitation)) |>
filter(!is.na(Precipitation))
#MLES for Gamma
mlegamma <- function(data, par, neg=F){
alpha <- par[1]
beta <- par[2]
loglik <- sum(log(dgamma(x=data, shape=alpha, rate=beta)))
return(ifelse(neg, -loglik, loglik))
}
mles <- optim(par = c(1,1),
fn = mlegamma,
data=data.precip$Precipitation,
neg=T)
alpha.hat.mle <- mles$par[1]
beta.hat.mle <- mles$par[2]
sum(log(dgamma(x=data.precip$Precipitation, shape = alpha.hat.mle, rate = beta.hat.mle)))
#MLES for Lognormal
mlelognormal <- function(data, par, neg=F){
meanlog <- par[1]
sdlog <- par[2]
loglik <- sum(log(dlnorm(x=data, meanlog=meanlog, sdlog=sdlog)))
return(ifelse(neg, -loglik, loglik))
}
mles <- optim(par = c(1,1),
fn = mlelognormal,
data=data.precip$Precipitation,
neg=T)
meanlog <- mles$par[1]
sdlog <- mles$par[2]
sum(log(dlnorm(x=data.precip$Precipitation, meanlog=meanlog, sdlog=sdlog)))
#FINDING THE RATIOS
#WEIBULL GAMMA
-2166.496 - sum(log(dgamma(x=data.precip$Precipitation, shape = alpha.hat.mle, rate = beta.hat.mle)))
-15.34738
#WEIBULL LOGNORMAL
-2166.496 - sum(log(dlnorm(x=data.precip$Precipitation, meanlog=meanlog, sdlog=sdlog)))
37.70453
#GAMMA LOGNORMAL
sum(log(dgamma(x=data.precip$Precipitation, shape = alpha.hat.mle, rate = beta.hat.mle))) - sum(log(dlnorm(x=data.precip$Precipitation, meanlog=meanlog, sdlog=sdlog)))
53.05191
View(mles)
?optim
setwd("~/Documents/GitHub/lab-7-exploring-the-beta-distribution-HarrisonWolfe")
